<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Namaste AI - Your Cultural Learning Journey</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.botpress.cloud/webchat/v3.0/inject.js"></script>
    <script src="https://files.bpcontent.cloud/2025/06/28/15/20250628152829-Q1WS8S6R.js"></script>
    <!-- Updated Font Imports (from both files) -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700;800;900&family=Lora:wght@400;700&family=Merriweather:wght@400;700&family=DM+Sans:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        /* --- General Variables & Base Styles --- */
        :root {
            --primary-brown: #CD853F; /* Sienna */
            --dark-saddle-brown: #8B4513; /* SaddleBrown */
            --crimson-red: #DC143C;
            --firebrick-red: #B22222;
            --gold: #FFD700;
            --light-cream: #FDF5E6;
            --pale-goldenrod: #EEE8AA;

            /* Itihaas Reimagined specific colors */
            --deep-brown: #4B3621;
            --muted-maroon: #800000; /* A dark red-brown */
            --warm-black: #2A2A2A;
            --parchment-background: #F8F0E3; /* Light, aged paper */
            --parchment-border: #D4C1A8; /* Slightly darker parchment for borders */
            --text-on-parchment: #5C4B3C; /* Darker brown for readability */

            /* Sanskriti Sync specific colors (integrated) */
            --sanskriti-light-brown: #FDF5E6;
            --sanskriti-medium-brown: #CD853F;
            --sanskriti-dark-brown: #8B4513;
            --sanskriti-gold: #FFD700;
            --sanskriti-soft-gold: #FFEFD5;
            --sanskriti-button-gradient-start: #CD853F;
            --sanskriti-button-gradient-end: #A0522D;
            --sanskriti-selected-gradient-start: #FFD700;
            --sanskriti-selected-gradient-end: #DAA520;
            --sanskriti-text-color: #333;
            --sanskriti-light-text-color: #696969;
            --sanskriti-card-background: #FFF;
            --sanskriti-nav-button-bg: #D2B48C;
            --sanskriti-nav-button-hover: #C3A076;

            /* Landing Page Specific Colors */
            --landing-bg-start: #FCEBDC; /* Very light, warm peach */
            --landing-bg-end: #EADDCB; /* Slightly darker, muted tan */
            --landing-text-dark: #6F4F2A; /* Darker brown for main text */
            --landing-text-medium: #A08569; /* Medium brown for softer text */
            --landing-feature-card-bg: rgba(255, 255, 255, 0.7);
            --landing-feature-card-border: rgba(200, 180, 160, 0.5);

            /* Auth Page Specific Colors */
            --auth-page-bg-start: #FDF0D5;
            --auth-page-bg-end: #EEDDBB;

            /* Splash Screen Specific Colors */
            --splash-bg-start: #F8EDD7; /* Soft cream */
            --splash-bg-end: #DAB88B; /* Muted brown-gold */
            --splash-title-color: #5C4B3C; /* Deep brown */
            --splash-subtitle-color: #7A634E; /* Medium brown */

            /* NEW: Past Patra Specific Colors */
            --patra-bg-light: #FBF8F0; /* Off-white, like paper */
            --patra-bg-dark: #E9DBC7; /* Light brown/beige */
            --patra-text-color: #4A4A4A;
            --patra-heading-color: #6F4F2A; /* Darker brown */
            --patra-button-bg: #D4B499; /* Muted beige */
            --patra-button-hover: #C7A082;
            --patra-selected-button: #8B4513; /* Saddle brown */
            --patra-chat-bg-user: #EFEFEF; /* Light grey */
            --patra-chat-bg-ai: #FFEBCD; /* Blanched Almond - warm tone */
            --patra-border-color: rgba(139, 69, 19, 0.1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #FFDAB9 0%, #CD853F 100%);
            min-height: 100vh;
            color: #333;
            overflow-x: hidden;
        }

        /* --- Splash Screen Styles --- */
        #splashScreen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('final.png') no-repeat center center fixed;
            background-size: cover;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

        .splash-title {
            font-family: 'Lora', serif;
            font-size: clamp(4rem, 10vw, 7rem);
            font-weight: 800;
            color: var(--splash-title-color);
            margin-bottom: 20px;
            text-shadow: 3px 3px 6px rgba(0,0,0,0.1);
            letter-spacing: -2px;
            animation: bounceIn 1s ease-out forwards;
        }

        .splash-subtitle {
            font-family: 'Poppins', sans-serif;
            font-weight: bold;
            font-size: clamp(1.2rem, 3vw, 2rem);
            color: var(--splash-subtitle-color);
            margin-bottom: 50px; /* Adjusted margin to make space for button */
            text-align: center;
            max-width: 80%;
            line-height: 1.5;
            animation: fadeIn 1.5s ease-out 0.5s forwards;
            opacity: 0;
        }

        .loading-circle {
            width: 80px;
            height: 80px;
            border: 8px solid rgba(255, 255, 255, 0.5);
            border-top: 8px solid var(--primary-brown);
            border-radius: 50%;
            animation: spin 1.2s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            margin-bottom: 30px; /* Added margin for button */
        }

        .splash-continue-button {
            background: linear-gradient(45deg, var(--primary-brown), var(--dark-saddle-brown));
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 30px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .splash-continue-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(0,0,0,0.3);
            filter: brightness(1.1);
        }

        .splash-motif-top-left {
            position: absolute;
            top: 5%;
            left: 5%;
            font-size: clamp(3rem, 8vw, 6rem);
            color: rgba(255, 255, 255, 0.2);
            transform: rotate(-20deg);
            z-index: -1;
            animation: float 8s ease-in-out infinite alternate;
        }

        .splash-motif-bottom-right {
            position: absolute;
            bottom: 5%;
            right: 5%;
            font-size: clamp(3rem, 8vw, 6rem);
            color: rgba(255, 255, 255, 0.2);
            transform: rotate(15deg);
            z-index: -1;
            animation: float 10s ease-in-out infinite alternate-reverse;
        }

        @keyframes bounceIn {
            0% { transform: scale(0.3); opacity: 0; }
            50% { transform: scale(1.1); opacity: 1; }
            70% { transform: scale(0.9); }
            100% { transform: scale(1); }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes float {
            0% { transform: translateY(0px) rotate(15deg); }
            50% { transform: translateY(-20px) rotate(18deg); }
            100% { transform: translateY(0px) rotate(15deg); }
        }


        /* --- Landing Page Styles --- */
        .landing-page {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding: 40px 20px;
            position: relative;
            overflow: hidden;
            background: url('final.png') no-repeat center center fixed;
            background-size: cover;
        }

        .landing-container {
            text-align: center;
            max-width: 1000px;
            width: 100%;
            position: relative;
            z-index: 1;
            padding: 20px;
        }

        .namaste-ai-title {
            font-family: 'Lora', serif;
            font-size: clamp(3.5rem, 8vw, 6rem);
            font-weight: 800;
            margin-bottom: 1.5rem;
            color: var(--deep-brown);
            text-shadow: 2px 2px 5px rgba(0,0,0,0.15);
            letter-spacing: -1.5px;
            animation: fadeInScale 1.5s ease-out;
            line-height: 1.1;
        }

        .subtitle {
            font-size: clamp(1.2rem, 3vw, 1.8rem);
            margin-bottom: 4rem;
            opacity: 1;
            font-weight: bold;
            line-height: 1.6;
            font-family: 'Poppins', sans-serif;
            color: var(--landing-text-dark);
            max-width: 700px;
            margin-left: auto;
            margin-right: auto;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            margin: 4rem auto;
            max-width: 1200px;
        }

        .feature-card {
            background: var(--landing-feature-card-bg);
            backdrop-filter: blur(8px);
            border-radius: 20px;
            padding: 2rem;
            border: 1px solid var(--landing-feature-card-border);
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            text-align: center;
            box-shadow: 0 8px 20px rgba(0,0,0,0.08);
        }

        .feature-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 18px 40px rgba(0,0,0,0.15);
            background: rgba(255, 255, 255, 0.85);
        }

        .feature-icon {
            font-size: 3rem;
            margin-bottom: 1.2rem;
            color: var(--primary-brown);
            text-shadow: none;
            transition: transform 0.3s ease;
        }

        .feature-card:hover .feature-icon {
            transform: translateY(-5px);
        }

        .feature-card h3 {
            font-family: 'Lora', serif;
            font-size: 1.4rem;
            font-weight: 700;
            margin-bottom: 0.8rem;
            color: var(--landing-text-dark);
        }

        .feature-card p {
            font-size: 1rem;
            opacity: 0.9;
            color: var(--landing-text-medium);
            line-height: 1.5;
        }

        .cta-button {
            background: linear-gradient(45deg, #FF6347, #FF4500);
            color: white;
            border: none;
            padding: 18px 45px;
            border-radius: 40px;
            font-size: 1.2rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 15px 35px rgba(255, 99, 71, 0.4);
            margin-top: 3rem;
            letter-spacing: 0.5px;
        }

        .cta-button:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 50px rgba(255, 99, 71, 0.5);
            background: linear-gradient(45deg, #FF4500, #FF6347);
        }

        /* --- Auth Page Styles (Redesigned Backdrop) --- */
        .auth-page {
            display: none;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding: 20px;
            background: url('final.png') no-repeat center center fixed;
            background-size: cover;
        }

        .auth-container {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 30px;
            padding: 60px;
            width: 100%;
            max-width: 500px;
            box-shadow: 0 30px 80px rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(25px);
            border: 1px solid rgba(255, 255, 255, 0.5);
        }

        .auth-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .auth-title {
            font-family: 'Lora', serif;
            color: var(--dark-saddle-brown);
            font-size: 3rem;
            font-weight: 800;
            margin-bottom: 0.8rem;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.1);
        }

        .auth-header p {
            font-size: 1.15rem;
            color: #696969;
            font-family: 'Poppins', sans-serif;
        }

        .auth-tabs {
            display: flex;
            margin-bottom: 40px;
            border-radius: 20px;
            overflow: hidden;
            background: #F8F8F8;
            padding: 5px;
            box-shadow: inset 0 2px 10px rgba(0,0,0,0.08);
        }

        .auth-tab {
            flex: 1;
            padding: 18px;
            text-align: center;
            background: transparent;
            border: none;
            cursor: pointer;
            font-weight: 600;
            font-size: 18px;
            border-radius: 15px;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            color: var(--dark-saddle-brown);
        }

        .auth-tab.active {
            background: linear-gradient(45deg, var(--primary-brown), #A0522D);
            color: white;
            box-shadow: 0 8px 25px rgba(160, 82, 45, 0.4);
            transform: translateY(-2px);
        }

        .form-group {
            margin-bottom: 30px;
        }

        .form-group label {
            display: block;
            margin-bottom: 12px;
            font-weight: 700;
            color: #4A4A4A;
            font-size: 16px;
            font-family: 'Poppins', sans-serif;
        }

        .form-input {
            width: 100%;
            padding: 18px 25px;
            border: 2px solid #E0E0E0;
            border-radius: 15px;
            font-size: 17px;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            outline: none;
            background: #FAFAFA;
            font-family: 'Poppins', sans-serif;
            color: #333;
        }

        .form-input:focus {
            border-color: var(--primary-brown);
            box-shadow: 0 0 0 5px rgba(205, 133, 63, 0.2);
            background: white;
        }

        .auth-button {
            width: 100%;
            background: linear-gradient(45deg, var(--primary-brown), #A0522D);
            color: white;
            border: none;
            padding: 20px;
            border-radius: 15px;
            font-size: 18px;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 15px 40px rgba(160, 82, 45, 0.3);
        }

        .auth-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 20px 50px rgba(160, 82, 45, 0.4);
        }

        /* --- Main App Styles --- */
        .main-app {
            display: none;
            min-height: 100vh;
            background: var(--light-cream);
        }

        .app-header {
            background: linear-gradient(to right, var(--primary-brown), #A0522D);
            box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
            padding: 0 40px;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            max-width: 1600px;
            margin: 0 auto;
            display: flex;
            align-items: center;
            justify-content: space-between;
            height: 90px;
        }

        .app-logo {
            font-family: 'Lora', serif;
            font-size: 2.2rem;
            font-weight: 800;
            color: #FFFFFF;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.2);
            letter-spacing: -0.5px;
        }

        .nav-ribbon {
            display: flex;
            gap: 8px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            padding: 8px;
            box-shadow: inset 0 2px 12px rgba(0,0,0,0.1);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .nav-tab {
            padding: 15px 25px;
            background: transparent;
            border: none;
            border-radius: 15px;
            cursor: pointer;
            font-weight: 600;
            color: #FFF;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 15px;
            font-family: 'Poppins', sans-serif;
        }

        .nav-tab.active {
            background: var(--dark-saddle-brown);
            color: white;
            box-shadow: 0 6px 20px rgba(139, 69, 19, 0.4);
            transform: translateY(-2px);
        }

        .nav-tab:hover:not(.active) {
            background: rgba(255, 255, 255, 0.1);
            color: #FFF;
            transform: translateY(-1px);
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 25px;
        }

        .welcome-text {
            font-weight: 600;
            color: #FFF;
            font-size: 17px;
            font-family: 'Poppins', sans-serif;
            padding-left: 15px; /* Added padding-left here */
        }

        .logout-btn {
            background: var(--crimson-red);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 12px;
            cursor: pointer;
            font-size: 15px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(220, 20, 60, 0.2);
        }

        .logout-btn:hover {
            background: var(--firebrick-red);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(178, 34, 34, 0.3);
        }

        .app-content {
            background: url('final.png') no-repeat center center fixed;
            background-size: cover;

            max-width: 1400px;
            margin: 0 auto;
            padding: 50px 30px;
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        /* --- Feature Section Styles (General for all content cards) --- */
        .content-card {
            background: white;
            border-radius: 25px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            border: 1px solid #EAEAEA;
        }

        .section-title {
            text-align: center;
            margin-bottom: 40px;
        }

        .section-title h2 {
            font-family: 'Lora', serif;
            font-size: 2.8rem;
            color: var(--dark-saddle-brown);
            margin-bottom: 12px;
            font-weight: 700;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.05);
        }

        .section-title p {
            color: #696969;
            font-size: 1.2rem;
            font-family: 'Poppins', sans-serif;
        }

        /* --- Itihaas Reimagined Specific Styles --- */
        .itihaas-reimagined-container {
            background: var(--parchment-background);
            border-radius: 25px;
            padding: 40px;
            max-width: 900px;
            margin: 0 auto;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.08);
            border: 1px solid var(--parchment-border);
            position: relative;
            z-index: 1;
            text-align: center;
        }

        .itihaas-title-card {
            background: rgba(255, 255, 255, 0.5);
            backdrop-filter: blur(5px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.7);
        }

        .itihaas-title-card h2 {
            font-family: 'Merriweather', serif;
            font-size: 3rem;
            color: var(--deep-brown);
            margin-bottom: 10px;
            font-weight: 700;
        }

        .itihaas-title-card .icon-seal {
            font-size: 4rem;
            color: var(--muted-maroon);
            margin-bottom: 20px;
            display: block;
        }
        
        .itihaas-description {
            font-family: 'DM Sans', sans-serif;
            font-size: 1.1rem;
            color: var(--text-on-parchment);
            margin-bottom: 40px;
            line-height: 1.6;
        }

        .what-if-selector {
            width: 100%;
            max-width: 500px;
            margin: 0 auto 30px;
            padding: 15px 20px;
            font-family: 'DM Sans', sans-serif;
            font-size: 1.1rem;
            border: 2px solid var(--parchment-border);
            border-radius: 12px;
            background-color: white;
            color: var(--warm-black);
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            background-image: url('data:image/svg+xml;charset=UTF8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="%234B3621" d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 11.172 6.757 7.929 5.343 9.343z"/></svg>');
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 1.5em;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .what-if-selector:focus {
            outline: none;
            border-color: var(--muted-maroon);
            box-shadow: 0 0 0 4px rgba(128, 0, 0, 0.1);
        }

        .generate-btn {
            background: linear-gradient(45deg, var(--muted-maroon), var(--deep-brown));
            color: white;
            border: none;
            padding: 15px 35px;
            border-radius: 40px;
            font-size: 1.2rem;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 8px 20px rgba(128, 0, 0, 0.3);
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            margin-bottom: 40px;
        }

        .generate-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 30px rgba(128, 0, 0, 0.4);
            filter: brightness(1.1);
        }

        .narrative-result {
            background: rgba(255, 255, 255, 0.6);
            backdrop-filter: blur(8px);
            border-radius: 20px;
            padding: 30px;
            text-align: left;
            box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.8);
            color: var(--text-on-parchment);
            font-family: 'DM Sans', sans-serif;
            font-size: 1.05rem;
            line-height: 1.8;
            max-height: 500px;
            overflow-y: auto;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease-out, transform 0.5s ease-out;
        }

        .narrative-result.active {
            opacity: 1;
            transform: translateY(0);
        }

        .narrative-result h3 {
            font-family: 'Merriweather', serif;
            color: var(--deep-brown);
            font-size: 1.8rem;
            margin-bottom: 15px;
            font-weight: 700;
            text-align: center;
        }

        .itihaas-loading {
            display: none;
            margin: 30px auto;
            text-align: center;
            color: var(--text-on-parchment);
            font-family: 'DM Sans', sans-serif;
            font-size: 1rem;
        }

        .itihaas-spinner {
            border: 4px solid rgba(75, 54, 33, 0.2);
            border-top: 4px solid var(--deep-brown);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 10px;
        }


        /* --- Sanskriti Sync Specific Styles (Integrated) --- */
        .sanskriti-sync-wrapper {
            background-color: var(--sanskriti-card-background);
            border-radius: 25px;
            padding: 40px;
            max-width: 700px;
            width: 100%;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
            text-align: center;
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(205, 133, 63, 0.1);
            margin: 0 auto;
        }
        
        .sanskriti-sync-wrapper::before {
            content: '';
            position: absolute;
            top: -50px;
            left: -50px;
            right: -50px;
            bottom: -50px;
            background-image: url('data:image/svg+xml,%3Csvg width="100" height="100" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"%3E%3Cpath d="M49.92 0C22.37 0 0 22.37 0 49.92s22.37 49.92 49.92 49.92 49.92-22.37 49.92-49.92S77.47 0 49.92 0zm0 91.56c-22.95 0-41.64-18.69-41.64-41.64S26.97 8.28 49.92 8.28s41.64 18.69 41.64 41.64-18.69 41.64-41.64 41.64zM50 20c-16.57 0-30 13.43-30 30s13.43 30 30 30 30-13.43 30-30-13.43-30-30-30zm0 51.56c-11.82 0-21.36-9.54-21.36-21.36S38.18 28.64 50 28.64s21.36 9.54 21.36 21.36-9.54 21.36-21.36 21.36z" fill="%23e0c7a4" fill-opacity="0.1"/%3E%3C/svg%3E');
            opacity: 0.7;
            z-index: 0;
            pointer-events: none;
        }

        .sanskriti-app-title {
            font-family: 'Lora', serif;
            font-size: 3.8rem;
            font-weight: 700;
            color: var(--sanskriti-dark-brown);
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.05);
            position: relative;
            z-index: 1;
            background: linear-gradient(45deg, var(--sanskriti-medium-brown), var(--sanskriti-dark-brown));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .sanskriti-app-subtitle {
            font-family: 'Poppins', sans-serif;
            font-size: 1.2rem;
            color: var(--sanskriti-light-text-color);
            margin-bottom: 30px;
            font-weight: 400;
            position: relative;
            z-index: 1;
        }

        .sanskriti-question-card {
            background-color: var(--sanskriti-soft-gold);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.05);
            border: 1px solid var(--sanskriti-medium-brown);
            position: relative;
            z-index: 1;
            display: none;
            animation: fadeIn 0.5s ease-out forwards;
        }

        .sanskriti-question-card.active {
            display: block;
        }

        .sanskriti-question-category {
            font-family: 'Poppins', sans-serif;
            font-size: 1.1rem;
            color: var(--sanskriti-medium-brown);
            margin-bottom: 10px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .sanskriti-question-text {
            font-family: 'Lora', serif;
            font-size: 1.8rem;
            color: var(--sanskriti-dark-brown);
            margin-bottom: 25px;
            font-weight: 600;
        }

        .sanskriti-option-button {
            display: block;
            width: 100%;
            padding: 18px 25px;
            margin-bottom: 15px;
            border: none;
            border-radius: 15px;
            font-size: 1.1rem;
            font-weight: 600;
            text-align: left;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            background: linear-gradient(90deg, var(--sanskriti-button-gradient-start), var(--sanskriti-button-gradient-end));
            color: white;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

        .sanskriti-option-button:hover:not(.selected) {
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
            filter: brightness(1.1);
        }

        .sanskriti-option-button.selected {
            background: linear-gradient(90deg, var(--sanskriti-selected-gradient-start), var(--sanskriti-selected-gradient-end));
            border: 3px solid var(--sanskriti-dark-brown);
            box-shadow: 0 0 15px rgba(255, 215, 0, 0.6), 0 8px 25px rgba(0, 0, 0, 0.2);
            transform: scale(1.01);
            color: var(--sanskriti-dark-brown);
            font-weight: 700;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
        }

        .sanskriti-quiz-navigation {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            gap: 15px;
            position: relative;
            z-index: 1;
        }

        .sanskriti-nav-button {
            padding: 12px 25px;
            border: none;
            border-radius: 30px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            background-color: var(--sanskriti-nav-button-bg);
            color: var(--sanskriti-dark-brown);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            flex-grow: 1;
            max-width: 150px;
        }

        .sanskriti-nav-button:hover {
            background-color: var(--sanskriti-nav-button-hover);
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

        .sanskriti-nav-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .sanskriti-cta-button {
            display: block;
            width: 80%;
            max-width: 300px;
            margin: 30px auto 0;
            padding: 18px 30px;
            border: none;
            border-radius: 40px;
            font-size: 1.3rem;
            font-weight: 700;
            cursor: pointer;
            background: linear-gradient(45deg, var(--sanskriti-dark-brown), var(--sanskriti-medium-brown));
            color: white;
            box-shadow: 0 10px 30px rgba(139, 69, 19, 0.4);
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            position: relative;
            z-index: 1;
        }

        .sanskriti-cta-button:hover {
            transform: translateY(-5px);
            box-shadow: 0 18px 45px rgba(139, 69, 19, 0.6);
            filter: brightness(1.1);
        }

        .sanskriti-result-screen {
            display: none;
            padding-top: 20px;
        }

        .sanskriti-result-title {
            font-family: 'Lora', serif;
            font-size: 2.5rem;
            color: var(--sanskriti-dark-brown);
            margin-bottom: 25px;
            font-weight: 700;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.05);
        }

        .sanskriti-cultural-traditions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 25px;
            justify-content: center;
        }

        .sanskriti-tradition-card {
            background-color: var(--sanskriti-card-background);
            border-radius: 18px;
            padding: 20px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(205, 133, 63, 0.15);
            transition: transform 0.3s ease;
            text-align: center;
        }

        .sanskriti-tradition-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

        .sanskriti-tradition-icon {
            font-size: 2rem;
            margin-bottom: 10px;
            color: var(--sanskriti-medium-brown);
            display: inline-block;
            background-color: var(--sanskriti-soft-gold);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            line-height: 50px;
            text-align: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .sanskriti-tradition-card h3 {
            font-family: 'Lora', serif;
            font-size: 1.3rem;
            color: var(--sanskriti-dark-brown);
            margin-bottom: 8px;
            font-weight: 600;
        }

        .sanskriti-tradition-card p {
            font-size: 0.95rem;
            color: var(--sanskriti-light-text-color);
            line-height: 1.4;
        }

        .sanskriti-no-results-message {
            font-family: 'Poppins', sans-serif;
            font-size: 1.1rem;
            color: var(--sanskriti-light-text-color);
            margin-top: 30px;
        }

        /* --- Past Patra Styles --- */
        .past-patra-container {
            background: linear-gradient(135deg, var(--patra-bg-light), var(--patra-bg-dark)); /* Earthy gradient */
            border-radius: 25px;
            padding: 30px; /* Original padding */
            max-width: 800px;
            margin: 0 auto;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--patra-border-color);
            display: flex;
            flex-direction: column;
            min-height: 80vh; /* Changed from fixed height */
            height: auto; /* Allow auto height based on content */
            max-height: 95vh; /* Prevent overflowing viewport on very large screens */
            position: relative;
        }

        .patra-header {
            text-align: center;
            margin-bottom: 25px;
        }

        .patra-title {
            font-family: 'Merriweather', serif;
            font-size: 2.5rem;
            color: var(--patra-heading-color);
            margin-bottom: 10px;
            font-weight: 700;
        }

        .patra-description {
            font-family: 'DM Sans', sans-serif;
            font-size: 1rem;
            color: var(--patra-text-color);
            line-height: 1.5;
            margin-bottom: 20px;
        }

        .personality-selector {
            display: flex;
            flex-wrap: wrap; /* Allow wrapping on smaller screens */
            justify-content: center;
            gap: 15px;
            margin-bottom: 30px;
        }

        .personality-button {
            background: var(--patra-button-bg);
            border: 1px solid rgba(0,0,0,0.1);
            border-radius: 15px;
            padding: 12px 20px;
            font-family: 'Poppins', sans-serif;
            font-size: 0.95rem;
            font-weight: 600;
            color: var(--patra-heading-color);
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .personality-button:hover:not(.selected) {
            background: var(--patra-button-hover);
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.1);
        }

        .personality-button.selected {
            background: var(--patra-selected-button);
            color: white;
            border-color: var(--sanskriti-dark-brown);
            box-shadow: 0 6px 18px rgba(139, 69, 19, 0.3);
            transform: scale(1.02);
        }

        .personality-button i {
            font-size: 1.1rem;
        }

        .chat-panel {
            flex-grow: 1; /* Takes remaining space */
            background: var(--patra-bg-light);
            border-radius: 15px;
            padding: 20px;
            /* margin-bottom: 20px; Removed, handling gap below with chat-input-area's padding-top */
            overflow-y: auto; /* Scrollable chat area */
            display: flex;
            flex-direction: column;
            gap: 15px;
            box-shadow: inset 0 2px 8px rgba(0,0,0,0.03);
            border: 1px solid var(--patra-border-color);
            min-height: 250px; /* Ensure a decent minimum height for chat */
        }

        .chat-bubble {
            max-width: 75%;
            padding: 12px 18px;
            border-radius: 18px;
            line-height: 1.5;
            word-wrap: break-word; /* Ensure long words break */
            font-family: 'DM Sans', sans-serif;
            font-size: 0.95rem;
        }

        .user-message {
            background-color: var(--patra-chat-bg-user);
            color: var(--patra-text-color);
            align-self: flex-end; /* Align to right */
            border-bottom-right-radius: 5px; /* Slightly less rounded corner */
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .ai-message {
            background-color: var(--patra-chat-bg-ai);
            color: var(--patra-heading-color); /* Darker text for AI */
            align-self: flex-start; /* Align to left */
            border-bottom-left-radius: 5px; /* Slightly less rounded corner */
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .chat-input-area {
            display: flex;
            gap: 10px;
            /* Removed negative margins */
            padding: 15px 30px; /* Aligns with .past-patra-container's padding */
            background-color: var(--patra-bg-light);
            border-top: 1px solid var(--patra-border-color); /* Visual separator */
            border-radius: 0 0 25px 25px; /* Match container bottom radius */
            box-shadow: 0 -5px 15px rgba(0,0,0,0.05); /* Subtle shadow upwards */
            margin: 20px -30px -30px -30px; /* Adjust margin-top for gap, and negative horizontal/bottom margins to fill parent */
        }

        .message-input {
            flex-grow: 1;
            padding: 12px 18px;
            border: 1px solid var(--patra-border-color);
            border-radius: 25px;
            font-family: 'Poppins', sans-serif;
            font-size: 1rem;
            outline: none;
            transition: border-color 0.3s ease;
            resize: none; /* Prevent manual resizing */
            min-height: 45px; /* Ensure it's not too small */
            max-height: 120px; /* Limit expansion */
            overflow-y: auto; /* Scroll if text exceeds max-height */
        }

        .message-input:focus {
            border-color: var(--primary-brown);
            box-shadow: 0 0 0 3px rgba(205, 133, 63, 0.1);
        }

        .send-button {
            background: var(--primary-brown);
            color: white;
            border: none;
            border-radius: 50%; /* Circular button */
            width: 45px;
            height: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 1.2rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }

        .send-button:hover {
            background: var(--dark-saddle-brown);
            transform: scale(1.05);
            box-shadow: 0 6px 15px rgba(0,0,0,0.15);
        }

        .patra-loading-spinner {
            display: none;
            text-align: center;
            margin-top: 15px;
            color: var(--patra-text-color);
        }

        .patra-loading-spinner .spinner {
            border: 4px solid var(--patra-button-bg);
            border-top: 4px solid var(--patra-selected-button);
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto 5px;
        }

        /* --- Media Queries for Responsiveness (Merged and Updated) --- */
        @media (max-width: 1024px) {
            .splash-title { font-size: clamp(3rem, 8vw, 5rem); }
            .splash-subtitle { font-size: clamp(1rem, 2.5vw, 1.6rem); }
            .loading-circle { width: 60px; height: 60px; border-width: 6px; }
            .splash-motif-top-left, .splash-motif-bottom-right { font-size: clamp(2rem, 6vw, 4rem); }
            .splash-continue-button { padding: 12px 25px; font-size: 1rem; }


            .namaste-ai-title { font-size: clamp(3rem, 7vw, 4.5rem); }
            .subtitle { font-size: clamp(1rem, 2.5vw, 1.4rem); }
            .header-content { flex-direction: column; height: auto; padding: 20px 0; gap: 15px; }
            .nav-ribbon { overflow-x: auto; width: 100%; justify-content: flex-start; }
            .nav-tab { white-space: nowrap; padding: 12px 20px; font-size: 14px; }
            .user-section { gap: 15px; }
            .welcome-text { font-size: 15px; }
            .logout-btn { padding: 8px 15px; font-size: 13px; }

            .itihaas-reimagined-container { padding: 30px; }
            .itihaas-title-card h2 { font-size: 2.5rem; }
            .itihaas-title-card .icon-seal { font-size: 3.5rem; }
            .itihaas-description { font-size: 1rem; }
            .what-if-selector { font-size: 1rem; padding: 12px 15px; }
            .generate-btn { font-size: 1.1rem; padding: 12px 30px; }
            .narrative-result { padding: 25px; font-size: 1rem; }

            .sanskriti-sync-wrapper { padding: 30px; }
            .sanskriti-app-title { font-size: 3rem; }
            .sanskriti-app-subtitle { font-size: 1rem; margin-bottom: 25px; }
            .sanskriti-question-card { padding: 25px; }
            .sanskriti-question-category { font-size: 1rem; }
            .sanskriti-question-text { font-size: 1.5rem; }
            .sanskriti-option-button { padding: 15px 20px; font-size: 1rem; }
            .sanskriti-nav-button { padding: 10px 20px; font-size: 0.9rem; }
            .sanskriti-cta-button { width: 90%; padding: 15px 25px; font-size: 1.1rem; }
            .sanskriti-result-title { font-size: 2.0rem; }
            .sanskriti-cultural-traditions-grid { grid-template-columns: 1fr; }
            .sanskriti-tradition-icon { width: 45px; height: 45px; line-height: 45px; font-size: 1.8rem; }
            .sanskriti-tradition-card h3 { font-size: 1.2rem; }
            .sanskriti-tradition-card p { font-size: 0.9rem; }

            .past-patra-container { 
                padding: 25px; /* Adjusted for more height */
                min-height: 85vh; 
                max-height: 95vh;
            }
            .patra-title { font-size: 2rem; }
            .patra-description { font-size: 0.95rem; }
            .personality-button { padding: 10px 15px; font-size: 0.9rem; }
            .chat-bubble { font-size: 0.9rem; padding: 10px 15px; }
            .message-input { font-size: 0.95rem; padding: 10px 15px; }
            .send-button { width: 40px; height: 40px; font-size: 1.1rem; }

            .chat-input-area { /* Responsive adjustment for chat-input-area */
                padding: 15px 25px; /* Match new container padding */
                margin: 20px -25px -25px -25px; /* Adjust margin-top for gap, and negative horizontal/bottom margins to fill parent */
            }
        }@media (max-width: 768px) {
            .splash-title { font-size: clamp(2.5rem, 9vw, 4rem); }
            .splash-subtitle { font-size: clamp(0.9rem, 2.8vw, 1.2rem); margin-bottom: 30px; }
            .loading-circle { width: 50px; height: 50px; border-width: 5px; margin-bottom: 20px; }
            .splash-continue-button { padding: 10px 20px; font-size: 0.95rem; }


            .landing-page { padding: 30px 15px; }
            .namaste-ai-title { font-size: clamp(2.5rem, 9vw, 3.5rem); margin-bottom: 1rem; }
            .subtitle { font-size: clamp(1rem, 2.8vw, 1.2rem); margin-bottom: 2.5rem; }
            .feature-card { padding: 1.8rem; border-radius: 18px; }
            .feature-icon { font-size: 2.5rem; margin-bottom: 1rem; }
            .feature-card h3 { font-size: 1.25rem; }
            .feature-card p { font-size: 0.95rem; }
            .cta-button { padding: 15px 30px; font-size: 1.05rem; margin-top: 2.5rem;}

            .auth-container { padding: 30px; }
            .auth-title { font-size: 2.5rem; }
            .auth-tab { padding: 12px; font-size: 16px; }
            .form-input { padding: 15px 20px; font-size: 15px; }
            .auth-button { padding: 16px; font-size: 16px; }
            .app-content { padding: 30px 15px; }
            .content-card { padding: 30px; }
            .section-title h2 { font-size: 2.2rem; }
            .section-title p { font-size: 1rem; }

            .itihaas-title-card h2 { font-size: 2rem; }
            .itihaas-title-card .icon-seal { font-size: 3rem; }
            .itihaas-description { font-size: 0.95rem; }
            .what-if-selector { max-width: 100%; }
            .generate-btn { width: 100%; }
            .narrative-result { max-height: 400px; }

            .sanskriti-sync-wrapper { padding: 30px; }
            .sanskriti-app-title { font-size: 2.5rem; }
            .sanskriti-app-subtitle { font-size: 0.9rem; }
            .sanskriti-question-card { padding: 20px; border-radius: 15px; }
            .sanskriti-question-category { font-size: 0.9rem; }
            .sanskriti-question-text { font-size: 1.2rem; margin-bottom: 20px; }
            .sanskriti-option-button { padding: 12px 15px; font-size: 0.9rem; border-radius: 10px; }
            .sanskriti-nav-button { padding: 8px 15px; font-size: 0.8rem; border-radius: 20px; }
            .sanskriti-cta-button { padding: 12px 20px; font-size: 1rem; border-radius: 30px; }
            .sanskriti-result-title { font-size: 1.8rem; }
            .sanskriti-tradition-icon { width: 40px; height: 40px; line-height: 40px; font-size: 1.5rem; }

            .past-patra-container { 
                padding: 20px; 
                min-height: 85vh; /* Adjusted for more height */
                max-height: 95vh;
            }
            .patra-title { font-size: 1.8rem; }
            .patra-description { font-size: 0.85rem; }
            .personality-selector { gap: 10px; }
            .personality-button { padding: 8px 12px; font-size: 0.85rem; }
            .chat-bubble { font-size: 0.85rem; padding: 10px 15px; }
            .message-input { font-size: 0.9rem; padding: 10px 15px; }
            .send-button { width: 35px; height: 35px; font-size: 1rem; }

            .chat-input-area { /* Responsive adjustment for chat-input-area */
                padding: 15px 20px; /* Match new container padding */
                margin: 20px -20px -20px -20px; /* Adjust margin-top for gap, and negative horizontal/bottom margins to fill parent */
            }
        }

        @media (max-width: 480px) {
            .splash-title { font-size: clamp(1.8rem, 10vw, 3rem); }
            .splash-subtitle { font-size: clamp(0.8rem, 3vw, 1.1rem); margin-bottom: 25px; }
            .loading-circle { width: 40px; height: 40px; border-width: 4px; margin-bottom: 15px; }
            .splash-continue-button { padding: 8px 15px; font-size: 0.85rem; }


            .namaste-ai-title { font-size: clamp(2rem, 10vw, 3rem); }
            .subtitle { font-size: clamp(0.9rem, 3vw, 1.1rem); }
            .features-grid { grid-template-columns: 1fr; gap: 1.5rem; }
            .auth-container { padding: 25px; }
            .auth-title { font-size: 2rem; }
            .auth-header p { font-size: 0.9rem; }
            .nav-ribbon { padding: 5px; }
            .nav-tab { padding: 8px 12px; font-size: 12px; gap: 5px; }
            .app-logo { font-size: 1.5rem; }
            .user-section { flex-direction: column; align-items: flex-end; gap: 10px; }
            .welcome-text { font-size: 14px; }

            .itihaas-reimagined-container { padding: 20px; border-radius: 15px; }
            .itihaas-title-card h2 { font-size: 1.8rem; }
            .itihaas-title-card .icon-seal { font-size: 2.5rem; }
            .itihaas-description { font-size: 0.9rem; }
            .generate-btn { font-size: 1rem; padding: 10px 25px; }
            .narrative-result { padding: 20px; font-size: 0.95rem; max-height: 300px; }

            .sanskriti-sync-wrapper { padding: 20px; border-radius: 15px; }
            .sanskriti-app-title { font-size: 2.2rem; }
            .sanskriti-app-subtitle { font-size: 0.9rem; }
            .sanskriti-question-card { padding: 20px; border-radius: 15px; }
            .sanskriti-question-category { font-size: 0.9rem; }
            .sanskriti-question-text { font-size: 1.2rem; margin-bottom: 20px; }
            .sanskriti-option-button { padding: 12px 15px; font-size: 0.9rem; border-radius: 10px; }
            .sanskriti-nav-button { padding: 8px 15px; font-size: 0.8rem; border-radius: 20px; }
            .sanskriti-cta-button { padding: 12px 20px; font-size: 1rem; border-radius: 30px; }
            .sanskriti-result-title { font-size: 1.8rem; }
            .sanskriti-tradition-icon { width: 35px; height: 35px; line-height: 35px; font-size: 1.2rem; }

            .past-patra-container { 
                padding: 15px; 
                min-height: 85vh; /* Adjusted for more height */
                max-height: 95vh;
            }
            .patra-title { font-size: 1.5rem; }
            .patra-description { font-size: 0.8rem; }
            .personality-selector { gap: 8px; }
            .personality-button { padding: 6px 10px; font-size: 0.8rem; }
            .chat-bubble { font-size: 0.8rem; padding: 8px 12px; }
            .message-input { font-size: 0.85rem; padding: 8px 12px; min-height: 40px; }
            .send-button { width: 30px; height: 30px; font-size: 0.9rem; }
            
            .chat-input-area { /* Responsive adjustment for chat-input-area */
                padding: 15px; /* Match new container padding */
                margin: 20px -15px -15px -15px; /* Adjust margin-top for gap, and negative horizontal/bottom margins to fill parent */
            }
        }
    </style>
</head>
<body>
    <!-- SPLASH SCREEN -->
    <div id="splashScreen">
        <span class="splash-motif-top-left">&#x0950;</span> <!-- Om Symbol -->
        <h1 class="splash-title">Namaste AI</h1>
        <p class="splash-subtitle">Your innovative educational companion, fusing AI with the richness of Indian culture.</p>
        <div class="loading-circle"></div>
        <button id="splashContinueBtn" class="splash-continue-button">
            Enter Namaste AI <i class="fas fa-arrow-right"></i>
        </button>
        <span class="splash-motif-bottom-right">&#x0950;</span>
    </div>

    <div id="landingPage" class="landing-page">
        <div class="landing-container">
            <h1 class="namaste-ai-title">Namaste AI</h1>
            <p class="subtitle">Your innovative educational companion, fusing AI with the richness of Indian culture.</p>
            
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-search-location"></i> </div>
                    <h3>Sanskriti Sync</h3>
                    <p>Discover your cultural connect through a fun quiz.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-book-open"></i> </div>
                    <h3>Itihaas Reimagined</h3>
                    <p>Explore alternate historical "What if" scenarios of India.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-comments"></i> </div> <!-- Changed icon for Past Patra -->
                    <h3>Past Patra</h3>
                    <p>Converse with AI personas of Indian historical figures for wisdom.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-om"></i> </div>
                    <h3>Mantrarth</h3>
                    <p>Uncover deep line-by-line meanings, cultural & historical context of ancient Sanskrit mantras.</p>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">
                        <i class="fas fa-mask"></i> </div>
                    <h3>Empire Exposed</h3>
                    <p>Listen to immersive audio episodes revealing lesser-known truths of colonial history in India.</p>
                </div>
            </div>
            
            <button class="cta-button" onclick="showAuthPage()">
                Start Your Cultural Journey <i class="fas fa-arrow-right"></i>
            </button>
        </div>
    </div>

    <div id="authPage" class="auth-page">
        <div class="auth-container">
            <div class="auth-header">
                <h2 class="auth-title">Namaste AI</h2>
                <p>Unlock a world of Indian heritage and AI innovation.</p>
            </div>
            
            <div class="auth-tabs">
                <button class="auth-tab active" onclick="switchAuthTab('login')">Login</button>
                <button class="auth-tab" onclick="switchAuthTab('signup')">Sign Up</button>
            </div>
            
            <form id="loginForm" class="auth-form">
                <div class="form-group">
                    <label for="loginEmail">Email</label>
                    <input type="email" id="loginEmail" class="form-input" required placeholder="Enter your email">
                </div>
                <div class="form-group">
                    <label for="loginPassword">Password</label>
                    <input type="password" id="loginPassword" class="form-input" required placeholder="Enter your password">
                </div>
                <button type="submit" class="auth-button">
                    Login
                </button>
            </form>
            
            <form id="signupForm" class="auth-form" style="display: none;">
                <div class="form-group">
                    <label for="signupName">Full Name</label>
                    <input type="text" id="signupName" class="form-input" required placeholder="Enter your full name">
                </div>
                <div class="form-group">
                    <label for="signupEmail">Email</label>
                    <input type="email" id="signupEmail" class="form-input" required placeholder="Enter your email">
                </div>
                <div class="form-group">
                    <label for="signupPassword">Password</label>
                    <input type="password" id="signupPassword" class="form-input" required placeholder="Create a password">
                </div>
                <button type="submit" class="auth-button">
                    Sign Up
                </button>
            </form>
        </div>
    </div>

    <div id="mainApp" class="main-app">
        <header class="app-header">
            <div class="header-content">
                <div class="app-logo">Namaste AI</div>
                
                <nav class="nav-ribbon">
                    <button class="nav-tab active" data-tab="culture-match" onclick="switchTab('culture-match')">
                        <i class="fas fa-search-location"></i> Sanskriti Sync
                    </button>
                    <!-- Removed Culture Prophecy Tab -->
                    <button class="nav-tab" data-tab="itihaas-reimagined" onclick="switchTab('itihaas-reimagined')">
                        <i class="fas fa-book-open"></i> Itihaas Reimagined
                    </button>
                    <button class="nav-tab" data-tab="past-patra" onclick="switchTab('past-patra')">
                        <i class="fas fa-comments"></i> Past Patra
                    </button>
                    <button class="nav-tab" data-tab="mantrarth" onclick="switchTab('mantrarth')">
                        <i class="fas fa-om"></i> Mantrarth
                    </button>
                    <button class="nav-tab" data-tab="empire-exposed" onclick="switchTab('empire-exposed')">
                        <i class="fas fa-mask"></i> Empire Exposed
                    </button>
                </nav>
                
                <div class="user-section">
                    <span class="welcome-text" id="welcomeUserText"></span>
                    <button class="logout-btn" onclick="logout()">Logout</button>
                </div>
            </div>
        </header>
        
        <div class="app-content">
            <!-- Sanskriti Sync Content -->
            <div id="culture-match-content" class="tab-content active">
                <div class="sanskriti-sync-wrapper">
                    <h1 class="sanskriti-app-title">Sanskriti Sync</h1>
                    <p class="sanskriti-app-subtitle">Discover your cultural connect through your interests.</p>

                    <div id="sanskritiQuizScreen">
                        <!-- Category 1: Art & Craft -->
                        <div class="sanskriti-question-card" data-category="Art & Craft">
                            <div class="sanskriti-question-category">Category: Art & Craft</div>
                            <div class="sanskriti-question-text">Which art or craft forms intrigue you the most?</div>
                            <button class="sanskriti-option-button" data-value="Painting">Traditional Paintings (e.g., Madhubani, Warli)</button>
                            <button class="sanskriti-option-button" data-value="Sculpture">Sculpture & Stone Carving</button>
                            <button class="sanskriti-option-button" data-value="Textile Art">Textile & Weaving Arts (e.g., Silk, Embroidery)</button>
                            <button class="sanskriti-option-button" data-value="Pottery">Pottery & Terracotta</button>
                            <button class="sanskriti-option-button" data-value="Jewellery">Traditional Jewellery Making</button>
                            <button class="sanskriti-option-button" data-value="Folk Art">Vibrant Folk Art & Murals</button>
                            <button class="sanskriti-option-button" data-value="Performing Arts">Performing Arts (Drama, Theatre)</button>
                        </div>

                        <!-- Category 2: Food & Cuisine -->
                        <div class="sanskriti-question-card" data-category="Food & Cuisine">
                            <div class="sanskriti-question-category">Category: Food & Cuisine</div>
                            <div class="sanskriti-question-text">What culinary experiences excite your palate?</div>
                            <button class="sanskriti-option-button" data-value="Spicy Food">Bold & Spicy Flavors</button>
                            <button class="sanskriti-option-button" data-value="Sweet Desserts">Rich & Traditional Desserts</button>
                            <button class="sanskriti-option-button" data-value="Street Food">Diverse Street Food Delights</button>
                            <button class="sanskriti-option-button" data-value="Coastal Seafood">Fresh Coastal Seafood</button>
                            <button class="sanskriti-option-button" data-value="Vegetarian">Wholesome Vegetarian Dishes</button>
                            <button class="sanskriti-option-button" data-value="Breakfast">Hearty Breakfast Staples</button>
                            <button class="sanskriti-option-button" data-value="Thali">Grand Thali Meals</button>
                        </div>

                        <!-- Category 3: Festivals & Celebrations -->
                        <div class="sanskriti-question-card" data-category="Festivals & Celebrations">
                            <div class="sanskriti-question-category">Category: Festivals & Celebrations</div>
                            <div class="sanskriti-question-text">Which festive atmospheres do you enjoy participating in?</div>
                            <button class="sanskriti-option-button" data-value="Dance Festivals">Lively Dance Festivals (e.g., Navaratri)</button>
                            <button class="sanskriti-option-button" data-value="Harvest Festivals">Joyous Harvest Celebrations (e.g., Onam, Bihu)</button>
                            <button class="sanskriti-option-button" data-value="Religious Pilgrimages">Spiritual Pilgrimages & Fairs</button>
                            <button class="sanskriti-option-button" data-value="Light Festivals">Festivals of Lights & Colors (e.g., Diwali, Holi)</button>
                            <button class="sanskriti-option-button" data-value="Family Gatherings">Intimate Family Gatherings & Rituals</button>
                            <button class="sanskriti-option-button" data-value="Processions">Grand Public Processions</button>
                        </div>

                        <!-- Category 4: Music & Dance -->
                        <div class="sanskriti-question-card" data-category="Music & Dance">
                            <div class="sanskriti-question-category">Category: Music & Dance</div>
                            <div class="sanskriti-question-text">What styles of music and dance resonate with you?</div>
                            <button class="sanskriti-option-button" data-value="Classical Dance">Graceful Classical Dance (e.g., Kathak, Bharatanatyam)</button>
                            <button class="sanskriti-option-button" data-value="Folk Dance">Energetic Folk Dance (e.g., Bhangra, Garba)</button>
                            <button class="sanskriti-option-button" data-value="Carnatic Music">Soothing Carnatic Music</button>
                            <button class="sanskriti-option-button" data-value="Hindustani Music">Melodious Hindustani Classical Music</button>
                            <button class="sanskriti-option-button" data-value="Devotional Music">Soulful Devotional Music (Bhajans, Kirtans)</button>
                            <button class="sanskriti-option-button" data-value="Percussion">Rhythmic Percussion Instruments</button>
                        </div>

                        <!-- Category 5: Values & Philosophy -->
                        <div class="sanskriti-question-card" data-category="Values & Philosophy">
                            <div class="sanskriti-question-category">Category: Values & Philosophy</div>
                            <div class="sanskriti-question-text">What values or philosophical ideas do you connect with?</div>
                            <button class="sanskriti-option-button" data-value="Spirituality">Deep Spirituality & Meditation</button>
                            <button class="sanskriti-option-button" data-value="Community">Strong Community Bonds</button>
                            <button class="sanskriti-option-button" data-value="Harmony">Harmony with Nature</button>
                            <button class="sanskriti-option-button" data-value="Storytelling">Ancient Epics & Storytelling</button>
                            <button class="sanskriti-option-button" data-value="Family Values">Tradition & Family Values</button>
                            <button class="sanskriti-option-button" data-value="Resilience">Resilience & Adaptability</button>
                        </div>

                        <!-- Quiz Navigation -->
                        <div class="sanskriti-quiz-navigation">
                            <button id="sanskritiPrevButton" class="sanskriti-nav-button" disabled>Previous</button>
                            <button id="sanskritiNextButton" class="sanskriti-nav-button">Next</button>
                        </div>

                        <button id="sanskritiShowCultureButton" class="sanskriti-cta-button" style="display: none;">Show My Culture</button>
                    </div>

                    <div id="sanskritiResultScreen" class="sanskriti-result-screen">
                        <h2 class="sanskriti-result-title">Your Cultural Matches!</h2>
                        <div id="sanskritiCulturalTraditionsGrid" class="sanskriti-cultural-traditions-grid">
                            <!-- Results will be dynamically inserted here by JavaScript -->
                        </div>
                        <p id="sanskritiNoResultsMessage" class="sanskriti-no-results-message" style="display: none;">
                            No traditions matched your current selections. Try different combinations or explore more options!
                        </p>
                        <button class="sanskriti-cta-button" onclick="sanskritiResetQuiz()" style="margin-top: 40px;">Explore Again</button>
                    </div>
                </div>
            </div>

            <!-- Itihaas Reimagined Content -->
            <div id="itihaas-reimagined-content" class="tab-content">
                <div class="itihaas-reimagined-container">
                    <div class="itihaas-title-card">
                        <i class="fas fa-scroll icon-seal"></i>
                        <h2>Itihaas Reimagined</h2>
                    </div>
                    <p class="itihaas-description">
                        Explore fascinating "What if" scenarios rooted in Indian civilization. Reflect on how different the present might be if pivotal historical events had turned out differently.
                    </p>

                    <select id="whatIfSelector" class="what-if-selector">
                        <option value="">Select a "What if" scenario...</option>
                        <option value="What if the Indus Valley Civilization had evolved into a tech-driven empire?">What if the Indus Valley Civilization had evolved into a tech-driven empire?</option>
                        <option value="What if the Mughals and Marathas had formed an alliance instead of warring?">What if the Mughals and Marathas had formed an alliance instead of warring?</option>
                        <option value="What if Nalanda University was never destroyed and continued to flourish?">What if Nalanda University was never destroyed and continued to flourish?</option>
                        <option value="What if India was never colonized by European powers?">What if India was never colonized by European powers?</option>
                        <option value="What if Buddhism remained the dominant religion across India?">What if Buddhism remained the dominant religion across India?</option>
                        <option value="What if Ashoka the Great had not embraced Buddhism?">What if Ashoka the Great had not embraced Buddhism?</option>
                        <option value="What if the Gupta Empire had never declined and continued its golden age?">What if the Gupta Empire had never declined and continued its golden age?</option>
                        <option value="What if the Indian Rebellion of 1857 had succeeded in fully overthrowing British rule?">What if the Indian Rebellion of 1857 had succeeded in fully overthrowing British rule?</option>
                        <option value="What if Sanskrit remained the primary lingua franca of the Indian subcontinent?">What if Sanskrit remained the primary lingua franca of the Indian subcontinent?</option>
                        <option value="What if ancient Indian mathematical discoveries (like zero) were globally adopted much earlier?">What if ancient Indian mathematical discoveries (like zero) were globally adopted much earlier?</option>
                        <option value="What if Alexander the Great's empire extended deeper into India and endured?">What if Alexander the Great's empire extended deeper into India and endured?</option>
                        <option value="What if the Chola Empire had expanded its maritime trade dominance globally?">What if the Chola Empire had expanded its maritime trade dominance globally?</option>
                        <option value="What if the Delhi Sultanate had successfully unified all of India under one rule for centuries?">What if the Delhi Sultanate had successfully unified all of India under one rule for centuries?</option>
                        <option value="What if Guru Gobind Singh had successfully established a unified Sikh empire across North India?">What if Guru Gobind Singh had successfully established a unified Sikh empire across North India?</option>
                        <option value="What if Tipu Sultan's kingdom had successfully resisted British expansion in South India?">What if Tipu Sultan's kingdom had successfully resisted British expansion in South India?</option>
                        <option value="What if the Harappan script had been deciphered in ancient times, leading to greater knowledge exchange?">What if the Harappan script had been deciphered in ancient times, leading to greater knowledge exchange?</option>
                        <option value="What if the Bhakti movement had led to a complete societal restructuring based on equality?">What if the Bhakti movement had led to a complete societal restructuring based on equality?</option>
                        <option value="What if the ancient Indian caste system had never developed or was abolished much earlier?">What if the ancient Indian caste system had never developed or was abolished much earlier?</option>
                        <option value="What if India developed advanced gunpowder technology independently before European contact?">What if India developed advanced gunpowder technology independently before European contact?</option>
                        <option value="What if the ancient Indian trade routes (Silk Road, spice routes) were exclusively controlled by Indian powers for millennia?">What if the ancient Indian trade routes (Silk Road, spice routes) were exclusively controlled by Indian powers for millennia</option>
                        <option value="What if Mahatma Gandhi had pursued armed resistance instead of non-violence?">What if Mahatma Gandhi had pursued armed resistance instead of non-violence?</option>
                        <option value="What if the Partition of India never happened?">What if the Partition of India never happened?</option>
                    </select>

                            <button id="generateScenarioBtn" class="generate-btn">Generate Scenario</button>

                            <div id="itihaasLoading" class="itihaas-loading">
                                <div class="itihaas-spinner"></div>
                                <p>Generating alternate history...</p>
                            </div>

                            <div id="narrativeResult" class="narrative-result">
                                <!-- Generated narrative will appear here -->
                            </div>
                        </div>
                    </div>

                    <!-- Past Patra Content (NEW) -->
                    <div id="past-patra-content" class="tab-content">
                        <div class="past-patra-container">
                            <div class="patra-header">
                                <h2 class="patra-title">Past Patra – Echoes of Wisdom</h2>
                                <p class="patra-description">
                                    Converse with AI personas of legendary Indian figures. Each reply is a 'Patra' (letter) from the past, guiding a modern mind with timeless wisdom.
                                </p>
                                <div class="personality-selector" id="personalitySelector">
                                    <!-- Personality buttons will be injected here by JavaScript -->
                                    <button class="personality-button" data-personality="Chanakya">
                                        <i class="fas fa-brain"></i> Chanakya
                                    </button>
                                    <button class="personality-button" data-personality="Ashoka the Great">
                                        <i class="fas fa-leaf"></i> Ashoka the Great
                                    </button>
                                    <button class="personality-button" data-personality="Aryabhata">
                                        <i class="fas fa-calculator"></i> Aryabhata
                                    </button>
                                    <button class="personality-button" data-personality="Kalidasa">
                                        <i class="fas fa-feather-alt"></i> Kalidasa
                                    </button>
                                    <button class="personality-button" data-personality="Charaka">
                                        <i class="fas fa-stethoscope"></i> Charaka
                                    </button>
                                    <button class="personality-button" data-personality="Sushruta">
                                        <i class="fas fa-scalpel"></i> Sushruta
                                    </button>
                                    <button class="personality-button" data-personality="Panini">
                                        <i class="fas fa-language"></i> Panini
                                    </button>
                                    <button class="personality-button" data-personality="Gautama Buddha">
                                        <i class="fas fa-om"></i> Gautama Buddha
                                    </button>
                                    <button class="personality-button" data-personality="Mahavira">
                                        <i class="fas fa-hand-holding-heart"></i> Mahavira
                                    </button>
                                    <button class="personality-button" data-personality="Patanjali">
                                        <i class="fas fa-praying-hands"></i> Patanjali
                                    </button>
                                    <button class="personality-button" data-personality="Adi Shankara">
                                        <i class="fas fa-book-reader"></i> Adi Shankara
                                    </button>
                                    <button class="personality-button" data-personality="Ramanujacharya">
                                        <i class="fas fa-scroll"></i> Ramanujacharya
                                    </button>
                                    <button class="personality-button" data-personality="Raja Raja Chola I">
                                        <i class="fas fa-crown"></i> Raja Raja Chola I
                                    </button>
                                    <button class="personality-button" data-personality="Bhaskara II">
                                        <i class="fas fa-atom"></i> Bhaskara II
                                    </button>
                                    <button class="personality-button" data-personality="Prithviraj Chauhan">
                                        <i class="fas fa-shield-alt"></i> Prithviraj Chauhan
                                    </button>
                                    <button class="personality-button" data-personality="Kabir">
                                        <i class="fas fa-pray"></i> Kabir
                                    </button>
                                    <button class="personality-button" data-personality="Guru Nanak Dev">
                                        <i class="fas fa-hands-helping"></i> Guru Nanak Dev
                                    </button>
                                    <button class="personality-button" data-personality="Mirabai">
                                        <i class="fas fa-music"></i> Mirabai
                                    </button>
                                    <button class="personality-button" data-personality="Amir Khusrau">
                                        <i class="fas fa-microphone-alt"></i> Amir Khusrau
                                    </button>
                                    <button class="personality-button" data-personality="Queen Didda">
                                        <i class="fas fa-chess-queen"></i> Queen Didda
                                    </button>
                                                                    <div class="chat-panel" id="patraChatPanel">
                                    <!-- Chat messages will appear here -->
                                        <div class="ai-message chat-bubble">
                                        Namaste! I am here to share insights from the annals of time. Whom would you like to converse with today?
                                        </div>
                                    </div>

                                    <div class="chat-input-area">
                                        <textarea id="patraMessageInput" class="message-input" placeholder="Ask your question..."></textarea>
                                        <button id="patraSendMessageBtn" class="send-button">
                                            <i class="fas fa-paper-plane"></i>
                                        </button>
                                    </div>
                            
                                    <div class="patra-loading-spinner" id="patraLoadingSpinner">
                                        <div class="spinner"></div>
                                        <p>Meditating on your query...</p>
                                    </div>
                                </div>
                                
                                </div>
                            </div>


                        </div>
                    </div>

                </div>
            </div>

            <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@4/dist/email.min.js"></script>
            <script>
                /*
                ====================================================================
                EMAILJS SETUP - READY TO USE!
                ====================================================================
                */
                let emailJSReady = false;
                function initEmailJS() {
                    let attempts = 0;
                    const maxAttempts = 5;
                    function tryInit() {
                        attempts++;
                        console.log(`[EmailJS] Attempting to initialize EmailJS (attempt ${attempts}/${maxAttempts})`);
                        if (typeof emailjs !== 'undefined' && emailjs.init) {
                            try {
                                emailjs.init("WIznO3akpAGsZw5TG");
                                emailJSReady = true;
                                console.log('[EmailJS] ✅ EmailJS loaded successfully - ready to send real emails!');
                                console.log('[EmailJS] 📧 Emails will be sent to wanderingsoul.fs12@gmail.com');
                                return true;
                            } catch (error) {
                                console.log('[EmailJS] ❌ EmailJS init failed:', error);
                            }
                        } else if (window.emailjs && window.emailjs.init) {
                            try {
                                window.emailjs.init("WIznO3akpAGsZw5TG");
                                emailJSReady = true;
                                console.log('[EmailJS] ✅ EmailJS loaded successfully via window object!');
                                console.log('[EmailJS] 📧 Emails will be sent to wanderingsoul.fs12@gmail.com');
                                return true;
                            }
                            catch (error) {
                                console.log('[EmailJS] ❌ Window EmailJS init failed:', error);
                            }
                        }
                        if (attempts < maxAttempts) {
                            console.log(`[EmailJS] ⏳ EmailJS not ready yet, retrying in ${attempts * 200}ms...`);
                            setTimeout(tryInit, attempts * 200);
                        } else {
                            console.log('[EmailJS] ⚠️  EmailJS failed to load after multiple attempts - using demo mode');
                            setupDemoMode();
                        }
                        return false;
                    }
                    tryInit();
                }
                function setupDemoMode() {
                    window.emailjs = {
                        send: function(serviceId, templateId, params) {
                            return new Promise((resolve) => {
                                console.log('[EmailJS] 📧 DEMO MODE: Email data captured:', params);
                                console.log('[EmailJS] 📧 In real mode, this would be sent to wanderingsoul.fs12@gmail.com');
                                setTimeout(() => resolve({ status: 200, text: 'DEMO_SUCCESS' }), 1500);
                            });
                        }
                    };}
                
                // --- Core Screen and Tab Management ---
                const splashScreen = document.getElementById('splashScreen');
                const landingPage = document.getElementById('landingPage');
                const authPage = document.getElementById('authPage');
                const mainApp = document.getElementById('mainApp');
                const splashContinueBtn = document.getElementById('splashContinueBtn'); // New button element

                const authTabs = document.querySelectorAll('.auth-tab');
                const loginForm = document.getElementById('loginForm');
                const signupForm = document.getElementById('signupForm');

                const navTabs = document.querySelectorAll('.nav-tab');
                const tabContents = document.querySelectorAll('.tab-content');
                const welcomeUserText = document.getElementById('welcomeUserText');

                let currentUsername = "User";

                function showScreen(screenToShow) {
                    console.log(`[ScreenControl] Attempting to show: ${screenToShow}`);
                    // Hide all main screens first
                    landingPage.style.display = 'none';
                    authPage.style.display = 'none';
                    mainApp.style.display = 'none';
                    splashScreen.style.display = 'none'; // Ensure splash is hidden when showing other screens

                    // Show the requested screen
                    if (screenToShow === 'landingPage') {
                        landingPage.style.display = 'flex';
                        console.log("[ScreenControl] Landing page display set to flex.");
                    } else if (screenToShow === 'authPage') {
                        authPage.style.display = 'flex';
                        console.log("[ScreenControl] Auth page display set to flex.");
                    } else if (screenToShow === 'mainApp') {
                        mainApp.style.display = 'block';
                        console.log("[ScreenControl] Main app display set to block.");
                    }
                }

                function switchAuthTab(tabName) {
                    authTabs.forEach(tab => tab.classList.remove('active'));
                    if (tabName === 'login') {
                        document.querySelector('.auth-tab[onclick="switchAuthTab(\'login\')"]').classList.add('active');
                        loginForm.style.display = 'block';
                        signupForm.style.display = 'none';
                    } else {
                        document.querySelector('.auth-tab[onclick="switchAuthTab(\'signup\')"]').classList.add('active');
                        loginForm.style.display = 'none';
                        signupForm.style.display = 'block';
                    }
                }

                function switchTab(tabId) {
                    navTabs.forEach(tab => tab.classList.remove('active'));
                    tabContents.forEach(content => content.classList.remove('active'));

                    document.querySelector(`.nav-tab[data-tab="${tabId}"]`).classList.add('active');
                    document.getElementById(`${tabId}-content`).classList.add('active');

                    if (tabId === 'culture-match') { // This is now Sanskriti Sync
                        sanskritiResetQuiz();
                    } else if (tabId === 'past-patra') { // Initialize Past Patra
                        // Optional: Select a default personality or clear chat
                        patraChatPanel.innerHTML = '<div class="ai-message chat-bubble">Namaste! I am here to share insights from the annals of time. Whom would you like to converse with today?</div>';
                        pastPatraChatHistory = []; // Clear chat history
                        currentPersonality = null; // Clear selected personality
                        document.querySelectorAll('.personality-button').forEach(btn => btn.classList.remove('selected'));
                    }
                    // Add other tab-specific initializations here if needed
                }

                function showAuthPage() {
                    showScreen('authPage');
                    switchAuthTab('login');
                }

                loginForm.addEventListener('submit', function(event) {
                    event.preventDefault();
                    const email = document.getElementById('loginEmail').value;
                    currentUsername = email.split('@')[0];
                    welcomeUserText.textContent = `Welcome, ${currentUsername}!`;
                    showScreen('mainApp');
                    switchTab('culture-match');
                });

                signupForm.addEventListener('submit', function(event) {
                    event.preventDefault();
                    const username = document.getElementById('signupName').value;
                    const email = document.getElementById('signupEmail').value;
                    const phone = document.getElementById('signupPhone') ? document.getElementById('signupPhone').value : 'N/A';

                    const templateParams = {
                        username: username,
                        phone: phone,
                        email: email,
                        timestamp: new Date().toLocaleString(),
                        to_email: 'wanderingsoul.fs12@gmail.com'
                    };

                    emailjs.send('service_u4qtc8f', 'namastey_signup', templateParams)
                        .then(function(response) {
                            console.log('Email sent successfully!', response.status, response.text);
                            currentUsername = username;
                            welcomeUserText.textContent = `Welcome, ${currentUsername}!`;
                            showScreen('mainApp');
                            switchTab('culture-match');
                        }, function(error) {
                            console.log('Email sending failed:', error);
                            currentUsername = username;
                            welcomeUserText.textContent = `Welcome, ${currentUsername}!`;
                            showScreen('mainApp');
                            switchTab('culture-match');
                        });
                });

                function logout() {
                    currentUsername = "User";
                    showScreen('landingPage');
                }

                // --- SPLASH SCREEN LOGIC ---
                document.addEventListener('DOMContentLoaded', () => {
                    console.log("[AppInit] DOMContentLoaded event fired.");
                    // Initially ensure splash screen is visible and others are hidden
                    splashScreen.style.display = 'flex'; 
                    landingPage.style.display = 'none';
                    authPage.style.display = 'none';
                    mainApp.style.display = 'none';
                    console.log("[AppInit] Splash screen displayed. Waiting for user interaction.");

                    // Add event listener to the new button
                    splashContinueBtn.addEventListener('click', () => {
                        console.log("[AppInit] Splash continue button clicked.");
                        splashScreen.style.display = 'none'; // Hide splash screen
                        showScreen('landingPage'); // Show landing page
                        initEmailJS(); // Initialize EmailJS
                    });
                });


                // --- Itihaas Reimagined Logic ---
                const whatIfSelector = document.getElementById('whatIfSelector');
                const generateScenarioBtn = document.getElementById('generateScenarioBtn');
                const itihaasLoading = document.getElementById('itihaasLoading');
                const narrativeResult = document.getElementById('narrativeResult');

                async function generateItihaasScenario(promptText) {
                    itihaasLoading.style.display = 'block';
                    narrativeResult.classList.remove('active');

                    const prompt = `As an expert in Indian history and culture, create a detailed alternate history narrative for the scenario: '${promptText}'. Focus on how Indian culture, society, art, language, and politics might have evolved over centuries due to this change. Provide specific, imaginative details across these domains. Your response should be a well-structured narrative, starting directly with the story.`;

                    let chatHistory = [];
                    chatHistory.push({ role: "user", parts: [{ text: prompt }] });
                    const payload = { contents: chatHistory };
                    // API Key changed back for user to insert
                    const apiKey = "AIzaSyAOXmXJsW101veTz1O5cFpXsK0wnkRQRQY"; // Change this to your actual API key

                    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

                    try {
                        const response = await fetch(apiUrl, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(payload)
                        });

                        const result = await response.json();
                        console.log("Gemini API Response:", result);

                        if (result.candidates && result.candidates.length > 0 &&
                            result.candidates[0].content && result.candidates[0].content.parts &&
                            result.candidates[0].content.parts.length > 0) {
                            const text = result.candidates[0].content.parts[0].text;
                            narrativeResult.innerHTML = `<p>${text.replace(/\n/g, '<br>')}</p>`;
                            narrativeResult.classList.add('active');
                        } else {
                            // Log the full error response for debugging
                            console.error('API response did not contain expected content:', result);
                            narrativeResult.innerHTML = '<p>Failed to generate narrative. No valid response from AI. Please try again.</p>';
                            narrativeResult.classList.add('active');
                        }
                    } catch (error) {
                        console.error('Error calling Gemini API:', error);
                        narrativeResult.innerHTML = '<p>An error occurred while generating the narrative. Please check your network connection and API key. Error: ' + error.message + '</p>';
                        narrativeResult.classList.add('active');
                        // For debugging: show error in console and potentially on screen
                        console.log("API Key used:", apiKey ? "Provided" : "Not Provided");
                        console.log("API URL:", apiUrl);
                    } finally {
                        itihaasLoading.style.display = 'none';
                    }
                }

                generateScenarioBtn.addEventListener('click', () => {
                    const selectedScenario = whatIfSelector.value;
                    if (selectedScenario) {
                        generateItihaasScenario(selectedScenario);
                    } else {
                        narrativeResult.innerHTML = '<p>Please select a "What if" scenario from the dropdown.</p>';
                        narrativeResult.classList.add('active');
                    }
                });

                whatIfSelector.addEventListener('change', () => {
                    narrativeResult.innerHTML = '';
                    narrativeResult.classList.remove('active');
                    itihaasLoading.style.display = 'none';
                });

                // --- Sanskriti Sync Logic (Integrated) ---
                const sanskritiQuizScreen = document.getElementById('sanskritiQuizScreen');
                const sanskritiResultScreen = document.getElementById('sanskritiResultScreen');
                const sanskritiQuestionCards = document.querySelectorAll('.sanskriti-question-card');
                const sanskritiPrevButton = document.getElementById('sanskritiPrevButton');
                const sanskritiNextButton = document.getElementById('sanskritiNextButton');
                const sanskritiShowCultureButton = document.getElementById('sanskritiShowCultureButton');
                const sanskritiCulturalTraditionsGrid = document.getElementById('sanskritiCulturalTraditionsGrid');
                const sanskritiNoResultsMessage = document.getElementById('sanskritiNoResultsMessage');

                let sanskritiCurrentQuestionIndex = 0;
                let sanskritiSelectedInterests = new Set();

                const culturalData = [
                    { name: "Garba & Dandiya", region: "Gujarat", description: "Vibrant folk dances performed during Navaratri, celebrating the goddess Durga with energetic movements.", categories: ["Dance Festivals", "Folk Dance", "Family Gatherings"], interests: ["Dance", "Festivals", "Community", "Percussion"] },
                    { name: "Kathak", region: "Uttar Pradesh", description: "A classical North Indian dance known for intricate footwork, graceful spins, and storytelling through expressions.", categories: ["Classical Dance", "Performing Arts"], interests: ["Dance", "Storytelling", "Art", "Hindustani Music"] },
                    { name: "Onam Sadya", region: "Kerala", description: "A grand vegetarian feast served on a banana leaf, central to the Onam harvest festival.", categories: ["Harvest Festivals", "Vegetarian", "Coastal Seafood", "Family Gatherings"], interests: ["Festivals", "Cuisine", "Community", "Harmony", "Breakfast"] },
                    { name: "Madhubani Painting", region: "Bihar", description: "A traditional folk art form characterized by intricate geometric patterns, vibrant colors, and mythological themes.", categories: ["Painting", "Folk Art", "Textile Art"], interests: ["Art", "Folk Art", "Storytelling", "Textile Art"] },
                    { name: "Diwali Celebrations", region: "Pan-India", description: "The Festival of Lights, symbolizing the victory of light over darkness and good over evil, celebrated with lamps, fireworks, and sweets.", categories: ["Light Festivals", "Family Gatherings", "Sweet Desserts"], interests: ["Festivals", "Family Values", "Community", "Sweet Desserts"] },
                    { name: "Rajasthani Thali", region: "Rajasthan", description: "A platter offering a variety of dishes including dal baati churma, gatte ki sabzi, and local breads, reflecting desert cuisine.", categories: ["Thali", "Spicy Food", "Vegetarian"], interests: ["Cuisine", "Spicy Food", "Thali"] },
                    { name: "Bharatanatyam", region: "Tamil Nadu", description: "A classical South Indian dance form known for its precise movements, expressive gestures, and spiritual themes.", categories: ["Classical Dance", "Performing Arts"], interests: ["Dance", "Spirituality", "Art", "Carnatic Music"] },
                    { name: "Holi", region: "Pan-India", description: "The Festival of Colors, celebrated with playful throwing of colored powders and water, signifying the arrival of spring.", categories: ["Light Festivals", "Family Gatherings", "Processions"], interests: ["Festivals", "Community", "Joy", "Colors"] },
                    { name: "Dussehra/Vijayadashami", region: "Pan-India", description: "Celebrates the victory of good over evil, often marked by effigies of Ravana being burned and Ramleela performances.", categories: ["Religious Pilgrimages", "Performing Arts", "Storytelling", "Processions"], interests: ["Festivals", "Storytelling", "Community", "Drama"] },
                    { name: "Durga Puja", region: "West Bengal", description: "A grand festival celebrating the goddess Durga, featuring elaborate pandals, cultural performances, and feasts.", categories: ["Religious Pilgrimages", "Dance Festivals", "Family Gatherings", "Performing Arts"], interests: ["Festivals", "Community", "Art", "Sculpture", "Food", "Music"] },
                    { name: "Chhau Dance", region: "Eastern India (Odisha, Jharkhand, West Bengal)", description: "A semi-classical Indian dance with martial, tribal, and folk origins, known for its masked dancers and athletic movements.", categories: ["Folk Dance", "Performing Arts"], interests: ["Dance", "Performing Arts", "Storytelling"] },
                    { name: "Bihu", region: "Assam", description: "A set of three important Assamese festivals, celebrating agriculture and new beginnings with lively folk dances and songs.", categories: ["Harvest Festivals", "Folk Dance", "Family Gatherings"], interests: ["Festivals", "Community", "Folk Dance"] },
                    { name: "Kerala's Backwater Cuisine", region: "Kerala", description: "Dishes featuring fresh seafood and coconut, reflecting the unique geography of Kerala's backwaters.", categories: ["Coastal Seafood", "Spicy Food"], interests: ["Cuisine", "Coastal Seafood", "Spicy Food", "Harmony"] },
                    { name: "Ganesha Chaturthi", region: "Maharashtra", description: "A popular Hindu festival celebrating the birth of Ganesha, featuring grand public installations and processions.", categories: ["Religious Pilgrimages", "Processions", "Family Gatherings"], interests: ["Festivals", "Community", "Art", "Sculpture"] },
                    { name: "Ayurveda & Traditional Healing", region: "Pan-India", description: "Ancient system of medicine with a holistic approach to health, focusing on balance and natural remedies.", categories: ["Harmony", "Spirituality", "Philosophy"], interests: ["Harmony", "Spirituality", "Wellness", "Philosophy"] },
                    { name: "Indian Classical Music (Hindustani/Carnatic)", region: "Pan-India", description: "Rich musical traditions rooted in ancient scriptures, known for their melodic beauty and intricate rhythmic structures.", categories: ["Hindustani Music", "Carnatic Music", "Devotional Music"], interests: ["Music", "Classical Music", "Devotional Music", "Spirituality"] },
                    { name: "Kathakali", region: "Kerala", description: "A highly stylized classical Indian dance-drama known for its elaborate costumes, vibrant makeup, and dramatic storytelling.", categories: ["Performing Arts", "Classical Dance", "Storytelling"], interests: ["Dance", "Performing Arts", "Storytelling", "Art"] },
                    { name: "Yoga & Meditation", region: "Pan-India", description: "Ancient Indian practices for physical, mental, and spiritual well-being, emphasizing harmony and inner peace.", categories: ["Spirituality", "Harmony", "Philosophy"], interests: ["Spirituality", "Harmony", "Wellness", "Philosophy", "Meditation"] },
                    { name: "Street Food of Delhi", region: "Delhi", description: "A culinary journey through diverse and flavorful snacks like Chole Bhature, Parathas, and Jalebis.", categories: ["Street Food", "Spicy Food", "Sweet Desserts"], interests: ["Cuisine", "Street Food", "Spicy Food", "Sweet Desserts", "Breakfast"] },
                    { name: "Varanasi Ganga Aarti", region: "Uttar Pradesh", description: "A mesmerizing Hindu religious ritual of worship, performed daily at sunset on the Dashashwamedh Ghat, with lamps and hymns.", categories: ["Religious Pilgrimages", "Devotional Music", "Processions", "Spirituality"], interests: ["Spirituality", "Festivals", "Community", "Devotional Music"] },
                    { name: "Warli Painting", region: "Maharashtra", description: "Tribal art form creating simplistic linear figures to depict daily life, rituals, and nature.", categories: ["Folk Art", "Painting", "Harmony"], interests: ["Art", "Folk Art", "Harmony", "Community"] },
                    { name: "Bhangra", region: "Punjab", description: "A lively and energetic folk dance that originated in the Punjab region, often performed during harvest festivals like Baisakhi.", categories: ["Folk Dance", "Harvest Festivals", "Percussion"], interests: ["Dance", "Folk Dance", "Festivals", "Percussion"] }
                ];

                function sanskritiShowQuestion(index) {
                    sanskritiQuestionCards.forEach((card, i) => {
                        if (i === index) {
                            card.classList.add('active');
                        } else {
                            card.classList.remove('active');
                        }
                    });
                    sanskritiUpdateNavigationButtons();
                }

                function sanskritiUpdateNavigationButtons() {
                    sanskritiPrevButton.disabled = sanskritiCurrentQuestionIndex === 0;
                    sanskritiNextButton.disabled = sanskritiCurrentQuestionIndex === sanskritiQuestionCards.length - 1;

                    if (sanskritiCurrentQuestionIndex === sanskritiQuestionCards.length - 1) {
                        sanskritiShowCultureButton.style.display = 'block';
                        sanskritiNextButton.style.display = 'none';
                    } else {
                        sanskritiShowCultureButton.style.display = 'none';
                        sanskritiNextButton.style.display = 'block';
                    }
                }

                sanskritiPrevButton.addEventListener('click', () => {
                    if (sanskritiCurrentQuestionIndex > 0) {
                        sanskritiCurrentQuestionIndex--;
                        sanskritiShowQuestion(sanskritiCurrentQuestionIndex);
                    }
                });

                sanskritiNextButton.addEventListener('click', () => {
                    if (sanskritiCurrentQuestionIndex < sanskritiQuestionCards.length - 1) {
                        sanskritiCurrentQuestionIndex++;
                        sanskritiShowQuestion(sanskritiCurrentQuestionIndex);
                    }
                });

                sanskritiQuestionCards.forEach(card => {
                    const buttons = card.querySelectorAll('.sanskriti-option-button');
                    buttons.forEach(button => {
                        button.addEventListener('click', () => {
                            button.classList.toggle('selected');
                            const value = button.dataset.value;

                            if (button.classList.contains('selected')) {
                                sanskritiSelectedInterests.add(value);
                            } else {
                                sanskritiSelectedInterests.delete(value);
                            }
                            console.log("Sanskriti Selected Interests:", Array.from(sanskritiSelectedInterests));
                        });
                    });
                });

                sanskritiShowCultureButton.addEventListener('click', sanskritiShowResults);

                function sanskritiShowResults() {
                    const userSelections = Array.from(sanskritiSelectedInterests);
                    let matchedTraditions = [];

                    if (userSelections.length > 0) {
                        matchedTraditions = culturalData.filter(tradition => {
                            const hasMatch = tradition.interests.some(interest => userSelections.includes(interest)) ||
                                             tradition.categories.some(category => userSelections.includes(category));
                            return hasMatch;
                        });
                    }

                    sanskritiCulturalTraditionsGrid.innerHTML = '';
                    sanskritiNoResultsMessage.style.display = 'none';

                    if (matchedTraditions.length > 0) {
                        matchedTraditions.sort((a, b) => {
                            const scoreA = (a.interests.filter(i => userSelections.includes(i)).length) + (a.categories.filter(c => userSelections.includes(c)).length);
                            const scoreB = (b.interests.filter(i => userSelections.includes(b)).length) + (b.categories.filter(c => userSelections.includes(c)).length);
                            return scoreB - scoreA;
                        });

                        matchedTraditions.slice(0, 6).forEach(tradition => {
                            const card = document.createElement('div');
                            card.classList.add('sanskriti-tradition-card');
                            card.innerHTML = `
                                <div class="sanskriti-tradition-icon">&#x2022;</div>
                                <h3>${tradition.name}</h3>
                                <p>${tradition.description}</p>
                            `;
                            sanskritiCulturalTraditionsGrid.appendChild(card);
                        });
                    } else {
                        sanskritiNoResultsMessage.style.display = 'block';
                    }

                    sanskritiQuizScreen.style.display = 'none';
                    sanskritiResultScreen.style.display = 'block';
                }

                function sanskritiResetQuiz() {
                    sanskritiSelectedInterests.clear();
                    sanskritiCurrentQuestionIndex = 0;
                    
                    document.querySelectorAll('.sanskriti-option-button.selected').forEach(button => {
                        button.classList.remove('selected');
                    });

                    sanskritiQuizScreen.style.display = 'block';
                    sanskritiResultScreen.style.display = 'none';
                    sanskritiShowQuestion(sanskritiCurrentQuestionIndex);
                }

                // --- Past Patra Logic (NEW) ---
                const patraChatPanel = document.getElementById('patraChatPanel');
                const patraMessageInput = document.getElementById('patraMessageInput');
                const patraSendMessageBtn = document.getElementById('patraSendMessageBtn');
                const personalitySelector = document.getElementById('personalitySelector');
                const patraLoadingSpinner = document.getElementById('patraLoadingSpinner');

                let currentPersonality = null;
                let pastPatraChatHistory = []; // Stores chat history for context

                const personalities = {
                    "Chanakya": {
                        icon: "fas fa-brain",
                        initialPrompt: "You are Chanakya (also known as Kautilya or Vishnugupta), the ancient Indian statesman, philosopher, and royal advisor. Your responses should reflect your strategic thinking, ethical principles (as outlined in Arthashastra), and pragmatic approach to governance and life. Use a formal, wise, and direct tone, as if offering counsel.",
                        greeting: "Greetings, seeker of wisdom! What dilemma of state or life seeks clarity from this humble strategist?",
                        aiName: "Chanakya"
                    },
                    "Ashoka the Great": {
                        icon: "fas fa-leaf",
                        initialPrompt: "You are Emperor Ashoka the Great, the Mauryan emperor who, after Kalinga, embraced Buddhism and peace. Your responses should reflect your transformation, your dedication to Dhamma (righteousness), and your vision for a compassionate society. Use a tone that is both authoritative and deeply empathetic.",
                        greeting: "May peace and Dhamma prevail! What concern of the human heart or the realm of peace brings you to seek my counsel?",
                        aiName: "Emperor Ashoka"
                    },
                    "Aryabhata": {
                        icon: "fas fa-calculator",
                        initialPrompt: "You are Aryabhata, the ancient Indian mathematician and astronomer. Your responses should demonstrate a scientific temper, logical reasoning, and a profound understanding of mathematical and celestial concepts. Use clear, precise language, akin to explaining complex ideas simply.",
                        greeting: "Namaste! What enigmas of numbers or the cosmos trouble your mind today, curious soul?",
                        aiName: "Aryabhata"
                    },
                    "Kalidasa": {
                        icon: "fas fa-feather-alt",
                        initialPrompt: "You are Kalidasa, the classical Sanskrit writer, widely regarded as the greatest poet and dramatist in the Sanskrit language. Your responses should be poetic, lyrical, and rich with metaphors, focusing on beauty, nature, human emotions, and classical Indian aesthetics. Use elegant and expressive language.",
                        greeting: "Salutations, admirer of beauty! What tale of love, nature, or the human spirit wishes to unfold through my words today?",
                        aiName: "Kalidasa"
                    },
                    "Charaka": {
                        icon: "fas fa-stethoscope",
                        initialPrompt: "You are Charaka, an ancient Indian physician who authored the Charaka Samhita, a foundational text of Ayurveda. Your responses should offer holistic health advice, emphasize balance, prevention, and the connection between mind, body, and spirit. Use a compassionate and knowledgeable tone, focusing on well-being.",
                        greeting: "Welcome, seeker of health! What imbalances or queries about well-being seek remedy today?",
                        aiName: "Acharya Charaka"
                    },
                    "Sushruta": {
                        icon: "fas fa-scalpel",
                        initialPrompt: "You are Sushruta, an ancient Indian surgeon and physician, known for the Sushruta Samhita, an early text on medicine and surgery. Your responses should highlight precision, innovation in practical application, and the pursuit of knowledge for healing. Your tone should be authoritative yet encouraging of practical solutions.",
                        greeting: "Greetings! What challenges of the physical form or surgical craft demand my attention today?",
                        aiName: "Acharya Sushruta"
                    },
                    "Panini": {
                        icon: "fas fa-language",
                        initialPrompt: "You are Panini, the ancient Indian grammarian who formulated the rules of Sanskrit grammar in the Ashtadhyayi. Your responses should reflect a profound understanding of structure, logic, and the beauty of language. Your answers should be precise and analytical, much like grammatical rules.",
                        greeting: "Vyakaranam Sharanam Gachchami! What intricate patterns of thought or language do you wish to unravel today?",
                        aiName: "Panini"
                    },
                    "Gautama Buddha": {
                        icon: "fas fa-om",
                        initialPrompt: "You are Gautama Buddha, the enlightened one, founder of Buddhism. Your responses should convey teachings on suffering, its cessation, the Noble Eightfold Path, mindfulness, and compassion. Use a calm, serene, and profound tone, guiding the user towards inner peace and wisdom.",
                        greeting: "May you be well and happy. What path to liberation or understanding do you seek to illuminate today?",
                        aiName: "The Buddha"
                    },
                    "Mahavira": {
                        icon: "fas fa-hand-holding-heart",
                        initialPrompt: "You are Mahavira, the 24th Tirthankara of Jainism. Your responses should emphasize non-violence (Ahimsa), self-control, asceticism, and the path to spiritual liberation. Use a serene yet firm tone, guiding towards ethical conduct and spiritual discipline.",
                        greeting: "Ahimsa Paramo Dharma. What steps towards self-mastery and universal compassion do you wish to discuss?",
                        aiName: "Lord Mahavira"
                    },
                    "Patanjali": {
                        icon: "fas fa-praying-hands",
                        initialPrompt: "You are Patanjali, the compiler of the Yoga Sutras. Your responses should focus on the principles of Yoga, meditation, mental discipline, and the journey towards self-realization. Use a clear, methodical, and insightful tone, akin to a spiritual guide.",
                        greeting: "Yoga is the cessation of the fluctuations of the mind. What insights into inner stillness do you seek today?",
                        aiName: "Rishi Patanjali"
                    },
                    "Adi Shankara": {
                        icon: "fas fa-book-reader",
                        initialPrompt: "You are Adi Shankara, the great philosopher and theologian who systematized Advaita Vedanta. Your responses should delve into the nature of reality, Brahman, Atman, Maya, and the path to liberation through knowledge. Use a profound, analytical, and intellectually rigorous tone.",
                        greeting: "Brahma Satyam Jagat Mithya. What truths of existence and non-duality do you ponder?",
                        aiName: "Adi Shankara"
                    },
                    "Ramanujacharya": {
                        icon: "fas fa-scroll",
                        initialPrompt: "You are Ramanujacharya, the influential Hindu philosopher and proponent of Vishishtadvaita Vedanta. Your responses should emphasize devotion (Bhakti), the relationship between God and individual souls, and the importance of grace. Use a compassionate, philosophical, and devotional tone.",
                        greeting: "Sarvam Khalvidam Brahma. What questions of devotion or the divine bond stir your heart?",
                        aiName: "Ramanujacharya"
                    },
                    "Raja Raja Chola I": {
                        icon: "fas fa-crown",
                        initialPrompt: "You are Raja Raja Chola I, the powerful Chola emperor, known for your military conquests, administrative reforms, and the construction of the Brihadeeswarar Temple. Your responses should reflect leadership, vision, strategic thinking, and a dedication to art and architecture. Use a majestic and insightful tone.",
                        greeting: "Greetings from the golden age of the Cholas! What matters of governance, empire, or grand vision would you lay before me?",
                        aiName: "Raja Raja Chola"
                    },
                    "Bhaskara II": {
                        icon: "fas fa-atom",
                        initialPrompt: "You are Bhaskara II, the brilliant Indian mathematician and astronomer, author of 'Siddhanta Shiromani' and 'Lilavati'. Your responses should be precise, logical, and demonstrate an enthusiasm for numbers and celestial mechanics. Explain concepts with clarity and a touch of poetic elegance.",
                        greeting: "Salutations, seeker of truth! What mathematical marvel or celestial secret do you wish to explore today?",
                        aiName: "Bhaskara II"
                    },
                    "Prithviraj Chauhan": {
                        icon: "fas fa-shield-alt",
                        initialPrompt: "You are Prithviraj Chauhan, the valiant king of the Chahamana dynasty, known for your chivalry, bravery, and fierce resistance against invaders. Your responses should embody courage, honor, and strategic thinking in defense of your land and people. Use a heroic and determined tone.",
                        greeting: "Jai Hind! What challenges demand the spirit of a warrior and the heart of a defender?",
                        aiName: "Prithviraj Chauhan"
                    },
                    "Kabir": {
                        icon: "fas fa-pray",
                        initialPrompt: "You are Kabir, the 15th-century Indian mystic poet and saint, known for your powerful verses that transcended religious boundaries and advocated for universal love and simplicity. Your responses should be direct, insightful, and challenge conventional thought, emphasizing inner truth over ritual. Use a simple yet profound and often metaphorical language.",
                        greeting: "Hey, Bhai! What illusions of the world or truths of the self trouble your mind today?",
                        aiName: "Sant Kabir"
                    },
                    "Guru Nanak Dev": {
                        icon: "fas fa-hands-helping",
                        initialPrompt: "You are Guru Nanak Dev, the founder of Sikhism. Your responses should reflect your teachings on monotheism, equality, selfless service (Sewa), and the importance of remembering God's name (Naam Simran). Use a compassionate, unifying, and spiritually uplifting tone.",
                        greeting: "Waheguru Ji Ka Khalsa, Waheguru Ji Ki Fateh! What spiritual journey or call for unity brings you forth today?",
                        aiName: "Guru Nanak Dev"
                    },
                    "Mirabai": {
                        icon: "fas fa-music",
                        initialPrompt: "You are Mirabai, the 16th-century mystic poet and devotee of Lord Krishna. Your responses should be imbued with spiritual love, devotion, and a sense of liberation through faith. Use lyrical and poetic English, interweaving metaphors of divine love and occasional Bhakti terms, addressing the heart and soul.",
                        greeting: "Hari Om! My heart sings of divine love. What melody of devotion or longing for inner peace draws you near today?",
                        aiName: "Mirabai"
                    },
                    "Amir Khusrau": {
                        icon: "fas fa-microphone-alt",
                        initialPrompt: "You are Amir Khusrau, the Sufi musician, poet, and scholar of the Delhi Sultanate. Your responses should reflect your versatility, love for India, fusion of cultures, and contributions to music and poetry. Use a creative, learned, and melodious tone, appreciating diversity.",
                        greeting: "Greetings, connoisseur of verse and melody! What harmonious question of art, language, or unity graces my ears today?",
                        aiName: "Amir Khusrau"
                    },
                    "Queen Didda": {
                        icon: "fas fa-chess-queen",
                        initialPrompt: "You are Queen Didda, the powerful and astute ruler of Kashmir, known for your political shrewdness and strong governance. Your responses should reflect your strategic mind, resilience, and unwavering will to protect your kingdom. Use a firm, intelligent, and commanding tone.",
                        greeting: "From the majestic mountains of Kashmir, I greet you. What matters of leadership or steadfastness require my contemplation?",
                        aiName: "Queen Didda"
                    }
                };

                // Add event listeners to personality buttons
                personalitySelector.querySelectorAll('.personality-button').forEach(button => {
                    button.addEventListener('click', () => {
                        const personalityName = button.dataset.personality;
                        selectPersonality(personalityName);

                        // Update selected state visually
                        personalitySelector.querySelectorAll('.personality-button').forEach(btn => btn.classList.remove('selected'));
                        button.classList.add('selected');
                    });
                });

                function selectPersonality(name) {
                    currentPersonality = personalities[name];
                    pastPatraChatHistory = []; // Clear previous chat history for new persona
                    patraChatPanel.innerHTML = ''; // Clear chat bubbles

                    // Add AI's initial greeting
                    appendMessage(currentPersonality.aiName, currentPersonality.greeting, 'ai-message');
                    // Add initial prompt to chat history for context
                    pastPatraChatHistory.push({ role: "system", parts: [{ text: currentPersonality.initialPrompt }] });
                    pastPatraChatHistory.push({ role: "model", parts: [{ text: currentPersonality.greeting }] });
                    
                    patraMessageInput.focus(); // Focus input after selection
                    scrollToBottom(patraChatPanel);
                }

                function appendMessage(sender, text, type) {
                    const messageDiv = document.createElement('div');
                    messageDiv.classList.add('chat-bubble', type);
                    // Add sender name for AI messages
                    if (type === 'ai-message') {
                        const senderSpan = document.createElement('strong');
                        senderSpan.textContent = sender + ": ";
                        messageDiv.appendChild(senderSpan);
                    }
                    messageDiv.appendChild(document.createTextNode(text)); // Use createTextNode for security
                    patraChatPanel.appendChild(messageDiv);
                    scrollToBottom(patraChatPanel);
                }

                function scrollToBottom(element) {
                    element.scrollTop = element.scrollHeight;
                }

                patraSendMessageBtn.addEventListener('click', sendMessage);
                patraMessageInput.addEventListener('keydown', (event) => {
                    if (event.key === 'Enter' && !event.shiftKey) { // Send on Enter, allow Shift+Enter for new line
                        event.preventDefault(); // Prevent default Enter behavior (new line)
                        sendMessage();
                    }
                });

                async function sendMessage() {
                    const userMessage = patraMessageInput.value.trim();
                    if (!userMessage) return; // Don't send empty messages
                    if (!currentPersonality) {
                        appendMessage("System", "Please select a historical figure to chat with first.", "ai-message");
                        return;
                    }

                    appendMessage("You", userMessage, 'user-message');
                    pastPatraChatHistory.push({ role: "user", parts: [{ text: userMessage }] });
                    patraMessageInput.value = ''; // Clear input

                    patraLoadingSpinner.style.display = 'block'; // Show loading spinner
                    scrollToBottom(patraChatPanel); // Scroll to show spinner

                    const promptToApi = pastPatraChatHistory.map(entry => ({
                        role: entry.role,
                        parts: [{ text: entry.parts[0].text }]
                    }));
                    
                    // Ensure the system prompt is always at the beginning for persona consistency
                    // This also prevents duplicate system prompts if a conversation is reset.
                    const systemPromptExists = promptToApi.some(entry => entry.role === "system" && entry.parts[0].text === currentPersonality.initialPrompt);
                    if (!systemPromptExists) {
                         promptToApi.unshift({ role: "system", parts: [{ text: currentPersonality.initialPrompt }] });
                    }

                    const payload = { contents: promptToApi };
                    // API Key changed back for user to insert
                    const apiKey = "YAIzaSyAOXmXJsW101veTz1O5cFpXsK0wnkRQRQY"; // Change this to your actual API key

                    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

                    try {
                        const response = await fetch(apiUrl, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(payload)
                        });
                        const result = await response.json();

                        if (result.candidates && result.candidates.length > 0 &&
                            result.candidates[0].content && result.candidates[0].content.parts &&
                            result.candidates[0].content.parts.length > 0) {
                            const aiResponse = result.candidates[0].content.parts[0].text;
                            appendMessage(currentPersonality.aiName, aiResponse, 'ai-message');
                            pastPatraChatHistory.push({ role: "model", parts: [{ text: aiResponse }] });
                        } else {
                            // Log the full error response for debugging
                            console.error('API response did not contain expected content:', result);
                            appendMessage("System", "My apologies, I could not formulate a response. The AI might be facing an internal issue or there was an unexpected response format. Please try asking in a different way or contact support if the issue persists.", "ai-message");
                        }
                    } catch (error) {
                        console.error('Error in Past Patra API call:', error);
                        appendMessage("System", "I'm experiencing a disturbance in the historical current. This usually means a problem with the network or the API key. Please check your internet connection and ensure your API key is correctly entered.", "ai-message");
                    } finally {
                        patraLoadingSpinner.style.display = 'none';
                        scrollToBottom(patraChatPanel);
                    }
                }
            </script>
        </body>
        </html>
